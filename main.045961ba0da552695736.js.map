{"version":3,"file":"main.045961ba0da552695736.js","mappings":"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","sources":["webpack://SportApp/webpack/runtime/chunk loaded","webpack://SportApp/./src/store/mainReducer.js","webpack://SportApp/./src/service.js","webpack://SportApp/./src/components/Coin/Coin.jsx","webpack://SportApp/./src/components/Coin/index.js","webpack://SportApp/./src/components/Main/Main.jsx","webpack://SportApp/./src/components/Main/index.js","webpack://SportApp/./src/components/Loading/Loading.jsx","webpack://SportApp/./src/components/Loading/index.js","webpack://SportApp/./src/panels/Overlay.jsx","webpack://SportApp/./src/components/OnBoardingFirst/OnBoardingFirst.jsx","webpack://SportApp/./src/components/OnBoardingFirst/index.js","webpack://SportApp/./src/components/OnBoradingSecond/OnBoardingSecond.jsx","webpack://SportApp/./src/components/OnBoradingSecond/index.js","webpack://SportApp/./src/components/Navbar/Navbar.jsx","webpack://SportApp/./src/components/Navbar/index.js","webpack://SportApp/./src/components/Info/Info.jsx","webpack://SportApp/./src/components/Info/index.js","webpack://SportApp/./src/components/Task/Task.jsx","webpack://SportApp/./src/components/Task/index.js","webpack://SportApp/./src/components/Prize/Prize.jsx","webpack://SportApp/./src/components/Prize/index.js","webpack://SportApp/./src/components/Rebus/Rebus.jsx","webpack://SportApp/./src/components/Rebus/index.js","webpack://SportApp/./src/App.js","webpack://SportApp/./src/store/index.js","webpack://SportApp/./src/index.js","webpack://SportApp/webpack/bootstrap","webpack://SportApp/webpack/runtime/amd options","webpack://SportApp/webpack/runtime/compat get default export","webpack://SportApp/webpack/runtime/define property getters","webpack://SportApp/webpack/runtime/global","webpack://SportApp/webpack/runtime/hasOwnProperty shorthand","webpack://SportApp/webpack/runtime/publicPath","webpack://SportApp/webpack/runtime/jsonp chunk loading","webpack://SportApp/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst mainSlice = createSlice({\n    name: 'main',\n    initialState: {\n        platform: null,\n        activePanel: 'loading',\n        cardInfo: {\n        },\n        launch_params: {\n        },\n        isLoading: false,\n        activeModal: false,\n        modalName: '',\n        boxes: [],\n        currentBox: {},\n        attempts: 0,\n        increment: false,\n        user: {\n            number: '',\n            avatar: '',\n            name: '',\n            cheques: [],\n            prizes: [],\n        },\n        winners: [],\n        confirmAll: false,\n        firstPage: true,\n        groupLink: '',\n        isActiveNavbar: false,\n        tickets: [],\n        heals: 0,\n        tasks: [],\n        tgID: 0,\n        prizes: [],\n        gameDays: [],\n        referal: '',\n        questID: 0,\n        questLink: '',\n        questText: '',\n        friendsCount: 0,\n    },\n    reducers: {\n        setLaunchParams(state, action) {\n            state.launch_params = action.payload\n        },\n        setActivePanel(state, action) {\n            state.activePanel = action.payload\n        },\n        setActiveModal(state, action) {\n            state.activeModal = action.payload\n        },\n        setIsLoading(state, action){\n            state.isLoading = action.payload\n        },\n        setPlatform(state, action){\n            state.platform = action.payload\n        },\n        setBoxes(state, action) {\n            state.boxes = action.payload;\n        },\n        setCurrentBox(state, action) {\n            state.currentBox = action.payload\n        },\n        setAttempts(state, action) {\n            state.attempts = action.payload\n        },\n        setIncrement(state, action) {\n            state.increment = action.payload;\n        },\n        setModalName(state, action) {\n            state.modalName = action.payload;\n        },\n        setCardInfo(state, action) {\n            state.cardInfo = action.payload;\n        },\n        setUserNumber(state, action) {\n            state.user.number = action.payload;\n        },\n        setUserName(state, action) {\n            state.user.name = action.payload;\n        },\n        setUserAvatar(state, action) {\n            state.user.avatar = action.payload;\n        },\n        setCheques(state, action) {\n            state.user.cheques = action.payload;\n        },\n        setWinners(state, action) {\n            state.winners = action.payload;\n        },\n        setConfirmAll(state, action) {\n            state.confirmAll = action.payload;\n        },\n        setFirstPage(state, action) {\n            state.firstPage = action.payload;\n        },\n        setGroupLink(state, action) {\n            state.groupLink = action.payload;\n        },\n        setActiveNavbar(state, action) {\n            state.isActiveNavbar = action.payload;\n        },\n        setTickets(state, action) {\n            state.tickets = action.payload;\n        },\n        setHeals(state, action) {\n            state.heals = action.payload;\n        },\n        setTasks(state, action) {\n            state.tasks = action.payload;\n        },\n        setTgID(state, action) {\n            state.tgID = action.payload;\n        },\n        setPrizes(state, action) {\n            state.prizes = action.payload;\n        },\n        setGameDays(state, action) {\n            state.gameDays = action.payload;\n        },\n        setReferal(state, action) {\n            state.referal = action.payload;\n        },\n        setQuestID(state, action) {\n            state.questID = action.payload;\n        },\n        setFriendsCount(state, action) {\n            state.friendsCount = action.payload;\n        },\n        setQuestLink(state, action) {\n            state.questLink = action.payload;\n        },\n        setQuestText(state, action) {\n            state.questText = action.payload;\n        }\n    }\n})\n\nexport default mainSlice.reducer\nexport const {\n    setActivePanel,\n    setLaunchParams,\n    setActiveModal,\n    setIsLoading,\n    setPlatform,\n    setBoxes,\n    setCurrentBox,\n    setAttempts,\n    setIncrement,\n    setModalName,\n    setCardInfo,\n    setUserNumber,\n    setUserName,\n    setUserAvatar,\n    setCheques,\n    setWinners,\n    setConfirmAll,\n    setFirstPage,\n    setGroupLink,\n    setActiveNavbar,\n    setTickets,\n    setHeals,\n    setTasks,\n    setTgID,\n    setPrizes,\n    setGameDays,\n    setReferal,\n    setQuestID,\n    setFriendsCount,\n    setQuestLink,\n    setQuestText,\n} = mainSlice.actions","const api_url = 'https://5.ilovebot.ru/api'\r\n// const api_url = 'https://pn.ilovebot.ru'\r\nimport {URLSearchParams} from \"core-js\"\r\n\r\nconst front_url = 'https://vk-billion.gamesmm.ru'\r\nconst params = window.location.search;\r\n\r\nasync function getUserInfo(url = '', data) {\r\n    let tail = (Object.keys(params).length === 0) ? '' : (new URLSearchParams(params)).toString()\r\n    let request = api_url + url + '?'+ data;\r\n\r\n    let response = await fetch(request,\r\n        {\r\n            method: 'GET',\r\n        });\r\n    if (!response.ok) {\r\n        throw new Error(`Неполучилось отправить GET запрос ${url}, статус ${response.status}`)\r\n    }\r\n    return await response.json();\r\n}\r\n\r\nasync function postQuestion(url = '', id ,data = {}) {\r\n    let tail = (Object.keys(params).length === 0) ? '' : (new URLSearchParams(params)).toString()\r\n    let request = api_url + url + '?'+ id;\r\n\r\n    let response = await fetch(request,\r\n        {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(data)\r\n        });\r\n    // if (!response.ok) {\r\n    //     throw new Error(`Неполучилось отправить POST запрос ${url}, статус ${response.status}`)\r\n    // }\r\n    return await response.json()\r\n}\r\n\r\nasync function postHeal(url = '', id, data = {}) {\r\n    let tail = (Object.keys(params).length === 0) ? '' : (new URLSearchParams(params)).toString()\r\n    let request = api_url + url + '?'+ id;\r\n\r\n    let response = await fetch(request,\r\n        {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(data)\r\n        });\r\n    if (!response.ok) {\r\n        throw new Error(`Неполучилось отправить POST запрос ${url}, статус ${response.status}`)\r\n    }\r\n    return await response.json()\r\n}\r\n\r\nasync function postFinish(url = '', id, data = {}) {\r\n    let tail = (Object.keys(params).length === 0) ? '' : (new URLSearchParams(params)).toString()\r\n    let request = api_url + url + '?'+ id;\r\n\r\n    let response = await fetch(request,\r\n        {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(data)\r\n        });\r\n    if (!response.ok) {\r\n        throw new Error(`Неполучилось отправить POST запрос ${url}, статус ${response.status}`)\r\n    }\r\n    return await response.json()\r\n}\r\n\r\nasync function postClick(url = '', id, data = {}) {\r\n    let tail = (Object.keys(params).length === 0) ? '' : (new URLSearchParams(params)).toString()\r\n    let request = api_url + url + '?'+ id;\r\n\r\n    let response = await fetch(request,\r\n        {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(data)\r\n        });\r\n    if (!response.ok) {\r\n        throw new Error(`Неполучилось отправить POST запрос ${url}, статус ${response.status}`)\r\n    }\r\n    return await response.json()\r\n}\r\n\r\nconst ServerConnect = {\r\n    postQuestion: postQuestion,\r\n    getUser: getUserInfo,\r\n    postClick: postClick,\r\n    postHeal: postHeal,\r\n    postFinish: postFinish,\r\n    api_url: api_url,\r\n    front_url: front_url\r\n}\r\n\r\nexport default ServerConnect;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport coin1 from '../../../public/assets/images/static/coin1-ver1.svg';\r\nimport coin2 from '../../../public/assets/images/static/coin1-ver2.svg';\r\nimport coin3 from '../../../public/assets/images/static/coin2-ver1.svg';\r\nimport coin4 from '../../../public/assets/images/static/coin2-ver2.svg';\r\n\r\nconst Coin = ({ x, y, children }) => {\r\n  const [opacity, setOpacity] = useState(1);\r\n  const [src, setSrc] = useState(coin1);\r\n  const coinImages = [coin1, coin2, coin3, coin4];\r\n  function getRandomImage(images) {\r\n    // Проверяем, что images - это массив с картинками\r\n    if (!Array.isArray(images) || images.length === 0) {\r\n      return null;\r\n    }\r\n  \r\n    // Получаем случайный индекс в массиве\r\n    const randomIndex = Math.floor(Math.random() * images.length);\r\n  \r\n    // Возвращаем случайную картинку из массива\r\n    return images[randomIndex];\r\n  }\r\n  useEffect(() => {\r\n    setSrc(getRandomImage(coinImages));\r\n    const intervalId = setInterval(() => {\r\n      if (opacity > 0) {\r\n        setOpacity(opacity => Math.max(opacity - 0.05, 0)); // Уменьшаем opacity каждые 50 миллисекунд, но не ниже 0\r\n      } else {\r\n        clearInterval(intervalId); // Прекращаем уменьшение, когда opacity достигает 0\r\n      }\r\n    }, 50);\r\n\r\n    return () => {\r\n      clearInterval(intervalId); // Очищаем интервал при размонтировании компонента\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n        <img className=\"coin\" style={{ left: `${x}px`, top: `${y}px`, opacity }} src={src} alt=\"\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Coin;","import Coin from \"./Coin\";\r\n\r\nexport default Coin","import React, { useEffect, useRef, useState } from 'react';\nimport './style.css';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveNavbar, setActivePanel, setCheques, setGameDays, setHeals, setPrizes, setTasks, setTickets, setUserAvatar, setUserName, setUserNumber } from '../../store/mainReducer';\nimport bridge from '@vkontakte/vk-bridge';\nimport Snackbar from '../Snackbar';\nimport ServerConnect from '../../service';\nimport { isIOS, isDesktop } from 'react-device-detect';\nimport Coin from '../Coin';\nimport catEnd from '../../../public/assets/images/static/main-cat-end.png';\nimport cat from '../../../public/assets/images/static/main-cat.png';\n\n\nconst Main = ({overlayClass, setOverlayClass, firstInteraction, setFirstInteraction, setIsPlaying, startPlay, updatedDays}) => {\n  const dispatch = useDispatch();\n  const referal = useSelector((state) => state.main.referal);\n  const tgID = useSelector((state) => state.main.tgID);\n  const healsCount = useSelector((state) => state.main.heals);\n  const ticketsCount = useSelector((state) => state.main.tickets.length);\n  const gameDays = useSelector((state) => state.main.gameDays);\n  const [progressWidth, setProgressWidth] = useState('0%');\n  const [endPage, setEndPage] = useState('main__end-page');\n  const [catHeadClass, setCatHeadClass] = useState('cat__head-block');\n  const [catBodyClass, setCatBodyClass] = useState('cat-img cat-img_body')\n  const [classPage, setClassPage] = useState('main');\n  const [penPopup, setPenPopup] = useState('pen-popup');\n  const [penRejectPopup, setPenRejectPopup] = useState('pen-popup');\n  const [penSuccessPopup, setPenSuccessPopup] = useState('pen-popup');\n  const [penWaitPopup, setPenWaitPopup] = useState('pen-popup');\n  const [ticketPopup, setTicketPopup] = useState('ticket-popup');\n  const [pawPopup, setPawPopup] = useState('paw-popup')\n  const [coinClass, setCoinClass] = useState('days__cat');\n  const [pawPage, setPawPage] = useState('paw-page')\n  const [coins, setCoins] = useState([]);\n  const [count, setCount] = useState(0);\n  const [pawsDecrease, setPawsDecrease] = useState('paw-page__paw-img');\n  const [pawsButton, setPawsButton] = useState('paw-page__open-btn paw-page__open-btn_disable');\n  const [pawPageSecondTicket, setPawPageSecondTicket] = useState(\"paw-page__second_ticket\");\n  const [pawPageSecondPromo, setPawPageSecondPromo] = useState(\"paw-page__second_promo\");\n  const [topPopup, setTopPopup] = useState('main__top-popup');\n  const [endClicking, setEndClicking] = useState(false);\n  const [lastClickTime, setLastClickTime] = useState(null);\n  const [days, setDays] = useState(updatedDays);\n  const [gameDayID, setGameDayID] = useState(0);\n  const [pawsInfo, setPawsInfo] = useState({});\n  const [pawsPromo, setPawsPromo] = useState(false);\n  const [ticketText, setTicketText] = useState('');\n\n  let currentSwiperIndex;\n  const swiperRef = useRef(null);\n  useEffect(() => {\n    // console.log(gameDays);\n    const pseudo = [\n      {\n          \"id\": 1,\n          \"date\": \"2024-09-13\",\n          \"clicks\": 0,\n          \"done\": true,\n          \"closed_by_heal\": true,\n          \"reward_obtained\": true\n      },\n      {\n          \"id\": 2,\n          \"date\": \"2024-09-14\",\n          \"clicks\": 0,\n          \"done\": false,\n          \"closed_by_heal\": false,\n          \"reward_obtained\": false\n      },\n      {\n          \"id\": 3,\n          \"date\": \"2024-09-15\",\n          \"clicks\": 0,\n          \"done\": false,\n          \"closed_by_heal\": false,\n          \"reward_obtained\": false\n      },\n      {\n          \"id\": 4,\n          \"date\": \"2024-09-16\",\n          \"clicks\": 0,\n          \"done\": false,\n          \"closed_by_heal\": false,\n          \"reward_obtained\": false\n      },\n      {\n          \"id\": 5,\n          \"date\": \"2024-09-17\",\n          \"clicks\": 15,\n          \"done\": false,\n          \"closed_by_heal\": false,\n          \"reward_obtained\": false\n      },\n      {\n          \"id\": 6,\n          \"date\": \"2024-09-18\",\n          \"clicks\": 0,\n          \"done\": false,\n          \"closed_by_heal\": false,\n          \"reward_obtained\": false\n      },\n      {\n          \"id\": 7,\n          \"date\": \"2024-09-19\",\n          \"clicks\": 0,\n          \"done\": false,\n          \"closed_by_heal\": false,\n          \"reward_obtained\": false\n      }\n  ]\n    const copyOfGameDays = [...gameDays];\n    // const copyOfGameDays = [...pseudo];\n    const sortedData = copyOfGameDays.sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Определяем текущую дату по Москве\n    const currentDateObj = new Date();\n    const currentDateOptions = { timeZone: 'Europe/Moscow', year: 'numeric', month: '2-digit', day: '2-digit' };\n    const currentDateStr = currentDateObj.toLocaleString('ru-RU', currentDateOptions).replace(/\\./g, '-');\n    const dateArray = currentDateStr.split('-');\n    const formattedCurrentDateStr = `${dateArray[2]}-${dateArray[1]}-${dateArray[0]}`;\n\n    // console.log(formattedCurrentDateStr);\n\n    // Находим индекс объекта, подходящего под текущую дату по Москве\n    const currentIndex = sortedData.findIndex(obj => obj.date === formattedCurrentDateStr);\n\n    // Создаем новый массив, состоящий из элементов, начиная с начала и заканчивая текущим днем\n    const updatedDays = sortedData.slice(0, currentIndex + 1);\n    // console.log(`currentDay: ${updatedDays[updatedDays.length - 1]}`);\n    // setCount(updatedDays[updatedDays.length - 1].clicks);\n    // setProgressWidth(`${count/250 * 100}%`)\n    currentSwiperIndex = currentIndex;\n    if (updatedDays[updatedDays.length - 1].done) {\n      setEndClicking(true);\n      setEndPage('main__end-page main__end-page_active');\n    }\n    setDays(updatedDays);\n\n  }, [gameDays])\n\n  useEffect(() => {\n    ServerConnect.getUser('/users/', referal)\n      .then((data) => {\n        const copyOfGameDays = [...data.gameDays];\n        // const copyOfGameDays = [...pseudo];\n        const sortedData = copyOfGameDays.sort((a, b) => new Date(a.date) - new Date(b.date));\n        // Определяем текущую дату по Москве\n        const currentDateObj = new Date();\n        const currentDateOptions = { timeZone: 'Europe/Moscow', year: 'numeric', month: '2-digit', day: '2-digit' };\n        const currentDateStr = currentDateObj.toLocaleString('ru-RU', currentDateOptions).replace(/\\./g, '-');\n        const dateArray = currentDateStr.split('-');\n        const formattedCurrentDateStr = `${dateArray[2]}-${dateArray[1]}-${dateArray[0]}`;\n    \n        // console.log(formattedCurrentDateStr);\n    \n        // Находим индекс объекта, подходящего под текущую дату по Москве\n        const currentIndex = sortedData.findIndex(obj => obj.date === formattedCurrentDateStr);\n    \n        // Создаем новый массив, состоящий из элементов, начиная с начала и заканчивая текущим днем\n        const updatedDays = sortedData.slice(0, currentIndex + 1);\n        // console.log(data);\n        setCount(updatedDays[updatedDays.length - 1].clicks);\n        setProgressWidth(`${updatedDays[updatedDays.length - 1].clicks/250 * 100}%`)\n      })\n      .catch((err) => {});\n      setTimeout(() => {\n        if (swiperRef.current) {\n          // Выбираем второй слайд как активный\n          swiperRef.current.swiper.slideTo(currentSwiperIndex);\n        }\n      }, 500)\n      return () => {\n        // ServerConnect.postClick('/click/', `tg_id=${tgID}`, {\n        //   'clicks': count\n        // })\n        //   .then((data) => {\n        //     // dispatch(setGameDays(data.gameDays));\n        //   })\n        //   .catch((err) => {});\n      }\n  }, [])\n\n  function copyHandler(code) {\n    setTopPopup('main__top-popup main__top-popup_active');\n    navigator.clipboard.writeText(code)\n     .then(() => {\n     })\n     .catch(err => {\n     });\n    setTimeout(() => {\n      setTopPopup('main__top-popup');\n    }, 2500)\n  }\n  function vibro() {\n    if (isIOS) {\n      window.Telegram.WebApp.HapticFeedback.impactOccurred(\"light\");\n    }\n    else {\n      if (\"vibrate\" in navigator) {\n        // Вибрируем устройство в течение 1000 миллисекунд (1 секунда)\n        navigator.vibrate(10);\n      } else {\n        // Ваш браузер не поддерживает API вибрации\n        // console.log(\"Ваш браузер не поддерживает API вибрации.\");\n      }\n    }\n  }\n  function closeTicketPopup() {\n    setTicketPopup(\"ticket-popup\");\n  }\n  function closePenPopup() {\n    setPenPopup('pen-popup');\n  }\n  function closePenRejectPopup() {\n    setPenRejectPopup('pen-popup');\n  }\n  function closePenSuccessPopup() {\n    ServerConnect.postHeal('/use_heal/', `tg_id=${tgID}`, {\n      'gameDay_id': gameDayID,\n    })\n      .then((data) => {\n        setPenSuccessPopup('pen-popup');\n        // console.log(data);\n        dispatch(setHeals(data.heals));\n        dispatch(setGameDays(data.gameDays));\n      })\n      .catch((err) => {});\n  }\n  function closePenWaitPopup() {\n    setPenWaitPopup('pen-popup');\n  }\n  function penHandler() {\n    setPenPopup('pen-popup pen-popup_active');\n  }\n  function ticketHandler() {\n    setTicketPopup('ticket-popup ticket-popup_active');\n  }\n  \n  function startClick(event) {\n    // if (!firstInteraction) {\n    //   setTimeout(() => {\n    //     startPlay();\n    //     setIsPlaying(true);\n    //   }, 100)\n    // }\n    setFirstInteraction(true);\n    vibro();\n    if(count < 249) {\n      setCatHeadClass('cat__head-block cat__head-block_animate');\n      setCatBodyClass('cat-img cat-img_body cat-img_body_active')\n      const currentTime = Date.now();\n      setLastClickTime(currentTime);\n      setProgressWidth(`${count/250 * 100}%`)\n      setCount((prevCount) => prevCount + 1);\n      setCoinClass('days__cat days__cat_active');\n      // Получаем координаты клика\n      const x = event.touches[0].clientX;\n      const y = event.touches[0].clientY;\n\n      // Создаем анимированную монету и добавляем в состояние\n      let newCoins = [...coins];\n      if (newCoins.length >= 30) {\n        newCoins = [];\n      }\n      newCoins.push({ x, y });\n      setCoins(newCoins);\n    }\n    else {\n      setCount(250);\n      ServerConnect.postClick('/click/', `tg_id=${tgID}`, {\n        'clicks': 250\n      })\n        .then((data) => {\n          dispatch(setGameDays(data.gameDays));\n          setEndClicking(true);\n          setEndPage('main__end-page main__end-page_active');\n        })\n        .catch((err) => {});\n    }\n  }\n  function startPCClick(event) {\n    if (isDesktop) {\n      // if (!firstInteraction) {\n      //   setTimeout(() => {\n      //     startPlay()\n      //     setIsPlaying(true);\n      //   }, 100)\n      // }\n      setFirstInteraction(true);\n      vibro();\n      // console.log('pc click')\n      if(count < 249) {\n        setCatHeadClass('cat__head-block cat__head-block_animate');\n        setCatBodyClass('cat-img cat-img_body cat-img_body_active')\n        const currentTime = Date.now();\n        setLastClickTime(currentTime);\n        setProgressWidth(`${count/250 * 100}%`)\n        setCount(prevState => prevState + 1);\n        setCoinClass('days__cat days__cat_active');\n        // Получаем координаты клика\n        const x = event.clientX;\n        const y = event.clientY;\n  \n        // Создаем анимированную монету и добавляем в состояние\n        let newCoins = [...coins];\n        if (newCoins.length >= 30) {\n          newCoins = [];\n        }\n        newCoins.push({ x, y });\n        setCoins(newCoins);\n      }\n      else {\n        setCount(250);\n        ServerConnect.postClick('/click/', `tg_id=${tgID}`, {\n          'clicks': 250\n        })\n          .then((data) => {\n            dispatch(setGameDays(data.gameDays));\n            setEndClicking(true);\n            setEndPage('main__end-page main__end-page_active');\n          })\n          .catch((err) => {});\n      }\n    }\n  }\n  function endClick() {\n    setCoinClass('days__cat');\n    setCatHeadClass('cat__head-block');\n    setCatBodyClass('cat-img cat-img_body')\n  }\n\n  useEffect(() => {\n    setClassPage('main main_active');\n    dispatch(setActiveNavbar(true));\n    ServerConnect.getUser('/users/', referal)\n      .then((data) => {\n        // console.log(data);\n        dispatch(setGameDays(data.gameDays));\n      })\n      .catch((err) => {});\n  }, []);\n  \n  const lastExecutionTimeRef = useRef(null);\n  const requestIdRef = useRef(null);\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    const executeCallback = () => {\n      // console.log('post clicks');\n      // console.log(count);\n      if (count < 249) {\n        ServerConnect.postClick('/click/', `tg_id=${tgID}`, {\n          'clicks': count\n        })\n          .then((data) => {\n            // dispatch(setGameDays(data.gameDays));\n          })\n          .catch((err) => {});\n      }\n      lastExecutionTimeRef.current = performance.now();\n      requestIdRef.current = requestAnimationFrame(checkAndExecute);\n    };\n\n    const checkAndExecute = () => {\n      if (\n        lastExecutionTimeRef.current === null ||\n        performance.now() - lastExecutionTimeRef.current >= 20000\n      ) {\n        if (didMountRef.current) {\n          executeCallback();\n        } else {\n          didMountRef.current = true;\n        }\n      } else {\n        requestIdRef.current = requestAnimationFrame(checkAndExecute);\n      }\n    };\n\n    requestIdRef.current = requestAnimationFrame(checkAndExecute);\n\n    return () => {\n      cancelAnimationFrame(requestIdRef.current);\n    };\n  }, [count]);\n\n  // const firstCountRef = useRef(0);\n  // useEffect(() => {\n  //   let timeoutId = null;\n  //   console.log(`мгн разница: ${count - firstCountRef.current}`)\n  //   if (Date.now() - lastClickTime >= 1000 && lastClickTime != null) {\n  //     console.log(`Разница: ${count - firstCountRef.current}`);\n      // ServerConnect.postClick('/click/', `tg_id=${tgID}`, {\n      //   'clicks': count - firstCountRef.current\n      // })\n      //   .then((data) => {\n      //     dispatch(setGameDays(data.gameDays));\n      //   })\n      //   .catch(err => console.log(err));\n    // }\n  //   if (lastClickTime !== 0 && lastClickTime != null) {\n  //     timeoutId = setTimeout(() => {\n  //       setLastClickTime(0);\n  //     }, 1000);\n  //   }\n  //   return () => {\n  //     if (timeoutId) {\n  //       clearTimeout(timeoutId);\n  //     }\n  //     else {\n  //       firstCountRef.current = count;\n  //     }\n  //   };\n  // }, [lastClickTime]);\n    return (\n        <>\n          <div className={`container ${classPage}`}>\n            <div className={pawPopup}>\n              <div className='paw-popup__content'>\n                <img className='paw-popup__img' src=\"assets/images/paw-popup-bg.png\" alt=\"\" />\n                <img className='paw-popup__paw' src=\"assets/images/paw-popup-paw.png\" alt=\"\" />\n                <p className='paw-popup__title'>\n                  Лапка получена\n                </p>\n                <p className='paw-popup__subtitle'>\n                  Вы&nbsp;получили свою ежедневную Лапку &mdash; можете забрать приз \n                </p>\n                <button onClick={() => {\n                    setPawPopup('paw-popup');\n                    ServerConnect.postFinish('/finish_day/', `tg_id=${tgID}`, {\n                      \"gameDay_id\": gameDayID\n                    })\n                      .then((data) => {\n                        // console.log(data);\n                        setPawsInfo(data)\n                        if (data.description) {\n                          setPawsPromo(true)\n                        }\n                        else {\n                          setPawsPromo(false);\n                          if (data.length == 1) {\n                            setTicketText('+ 1 Билетик')\n                          }\n                          if (data.length == 2) {\n                            setTicketText('+ 2 Билетика')\n                          }\n                          if (data.length == 3) {\n                            setTicketText('+ 3 Билетика')\n                          }\n                          if (data.length == 4) {\n                            setTicketText('+ 4 Билетика')\n                          }\n                          if (data.length == 5) {\n                            setTicketText('+ 5 Билетиков')\n                          }\n                        }\n                        ServerConnect.getUser('/users/', referal)\n                          .then((data) => {\n                            // console.log(data);\n                            \n                            dispatch(setTickets(data.tickets));\n                            dispatch(setHeals(data.heals));\n                            dispatch(setTasks(data.quests));\n                            dispatch(setPrizes(data.prizes));\n                            dispatch(setGameDays(data.gameDays));\n                          })\n                          .catch((err) => {});\n                        setPawPage('paw-page paw-page_active');\n                        setPawsButton('paw-page__open-btn');\n                      })\n                      .catch((err) => {});\n                  }} className='paw-popup__button' type='button'>\n                  ЗАБРАТЬ\n                </button>\n              </div>\n            </div>\n            <div className={pawPage}>\n              <div className='main__bg'></div>\n              <div className='paw-page__first'>\n                <img className={`${pawsDecrease} paw-page__paw-img_top-left`} src=\"assets/images/paw-page-top-left.png\" alt=\"\" />\n                <img className={`${pawsDecrease} paw-page__paw-img_top-right`} src=\"assets/images/paw-page-top-right.png\" alt=\"\" />\n                <img className={`${pawsDecrease} paw-page__paw-img_bottom-left`} src=\"assets/images/paw-page-bottom-left.png\" alt=\"\" />\n                <img className={`${pawsDecrease} paw-page__paw-img_bottom-right`} src=\"assets/images/paw-page-bottom-right.png\" alt=\"\" />\n                <button onClick={() => {\n                  setPawsDecrease('paw-page__paw-img paw-page__paw-img_active');\n                  setPawsButton('paw-page__open-btn paw-page__open-btn_disable');\n                  setTimeout(() => {\n                    if (pawsPromo) {\n                      setPawPageSecondPromo('paw-page__second_promo paw-page__second_promo_active')\n                    }\n                    else {\n                      setPawPageSecondTicket('paw-page__second_ticket paw-page__second_ticket_active');\n                    }\n                  }, 400)\n                }} className={pawsButton} type='button'>\n                  Раскрыть лапки\n                </button>\n              </div>\n              <div className={`paw-page__second ${pawPageSecondTicket}`}>\n                <img className='paw-page__blur-paw paw-page__blur-paw_top-left' src=\"assets/images/paw-top-left-blur.png\" alt=\"\" />\n                <img className='paw-page__blur-paw paw-page__blur-paw_top-right' src=\"assets/images/paw-top-right-blur.png\" alt=\"\" />\n                <img className='paw-page__blur-paw paw-page__blur-paw_bottom-left' src=\"assets/images/paw-bottom-left-blur.png\" alt=\"\" />\n                <img className='paw-page__blur-paw paw-page__blur-paw_bottom-right' src=\"assets/images/paw-bottom-right-blur.png\" alt=\"\" />\n                <div className='paw-page__second-info'>\n                  <img className='paw-page__second-img' src=\"assets/images/paw-page-ticket.svg\" alt=\"\" />\n                  <p className='paw-page__second-title'>\n                    {ticketText}\n                  </p>\n                  <p className='paw-page__second-subtitle'>\n                    Теперь ваш шанс победы \n                    в&nbsp;Розыгрыше выше\n                  </p>\n                </div>\n                <button onClick={() => {\n                  dispatch(setActivePanel('prize'));\n                }} className='paw-page__second-button' type='button'>\n                  Мои призы\n                </button>\n              </div>\n              <div className={`paw-page__second ${pawPageSecondPromo}`}>\n                <img className='paw-page__blur-paw paw-page__blur-paw_top-left' src=\"assets/images/paw-top-left-blur.png\" alt=\"\" />\n                <img className='paw-page__blur-paw paw-page__blur-paw_top-right' src=\"assets/images/paw-top-right-blur.png\" alt=\"\" />\n                <img className='paw-page__blur-paw paw-page__blur-paw_bottom-left' src=\"assets/images/paw-bottom-left-blur.png\" alt=\"\" />\n                <img className='paw-page__blur-paw paw-page__blur-paw_bottom-right' src=\"assets/images/paw-bottom-right-blur.png\" alt=\"\" />\n                <div className={topPopup}>\n                  Промокод скопирован\n                </div>\n                <div className='paw-page__promo-info'>\n                  <img className='paw-page__promo-img' src=\"assets/images/paw-page-promo.svg\" alt=\"\" />\n                  <p className='paw-page__promo-title'>\n                    {pawsInfo.type}\n                  </p>\n                  <p className='paw-page__promo-subtitle'>\n                    {pawsInfo.description}\n                  </p>\n                  <div className='paw-page__promo-block'>\n                    <div className='paw-page__promo-top-info'>\n                      <p className='paw-page__promo-top-text'>\n                        Промокод:\n                      </p>\n                      <p className='paw-page__promo-bottom-text'>\n                        {pawsInfo.data}\n                      </p>\n                    </div>\n                    <img onClick={() => {copyHandler(pawsInfo.data)}} className='paw-page__promo-copy' src=\"assets/images/promo-copy.svg\" alt=\"\" />\n                  </div>\n                </div>\n                <button onClick={() => {\n                  dispatch(setActivePanel('prize'))\n                }} className='paw-page__promo-button' type='button'>\n                  Мои призы\n                </button>\n              </div>\n            </div>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"ticket-popup ticket-popup_active\") {\n                setTicketPopup('ticket-popup');\n              }\n            }} className={ticketPopup}>\n              <div className='ticket-popup__content'>\n                <img onClick={closeTicketPopup} className='ticket-popup__close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <p className='ticket-popup__title'>\n                  Что такое Билетики?\n                </p>\n                <p className='ticket-popup__subtitle'>\n                  В&nbsp;конце дня вас ждут Билетики! \n                  Их&nbsp;количество зависит от&nbsp;удачи. \n                  Больше Билетиков&nbsp;&mdash; больше шансов \n                  на&nbsp;победу в&nbsp;Розыгрыше!\n                </p>\n                <button onClick={closeTicketPopup} className='ticket-popup__button' type='button'>\n                  Вернуться к котику\n                </button>\n              </div>\n            </div>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"pen-popup pen-popup_active\") {\n                setPenRejectPopup('pen-popup');\n              }\n            }} className={penRejectPopup}>\n              <div className='pen-popup__content'>\n                <img onClick={closePenRejectPopup} className='pen-popup__close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <img className='pen-popup__pen-img' src=\"assets/images/main-popup-pen.png\" alt=\"\" />\n                <div className='pen-popup__pen-help'></div>\n                <p className='pen-popup__title'>\n                  Пушинок не хватает!\n                </p>\n                <p className='pen-popup__subtitle'>\n                  Не&nbsp;хватает Пушинок для восстановления дня. Пригласите друзей в&nbsp;игру, чтобы получить нужное количество \n                  и&nbsp;продолжить игру с&nbsp;котиком!\n                </p>\n                <button onClick={() => {\n                  dispatch(setActivePanel('task'));\n                }} className='pen-popup__button' type='button'>\n                  Заработать Пушинки\n                </button>\n              </div>\n            </div>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"pen-popup pen-popup_active\") {\n                setPenSuccessPopup('pen-popup');\n              }\n            }} className={penSuccessPopup}>\n              <div className='pen-popup__content'>\n                <img onClick={closePenSuccessPopup} className='pen-popup__close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <img style={{top: '-90px'}} className='pen-popup__pen-img' src=\"assets/images/pen-success-popup.png\" alt=\"\" />\n                <div className='pen-popup__pen-help'></div>\n                <p className='pen-popup__title'>\n                  Пропущенный день?<br />\n                  Не проблема! \n                </p>\n                <p className='pen-popup__subtitle'>\n                  С&nbsp;помощью Пушинки вы&nbsp;можете восстановить пропущенный день \n                  и&nbsp;продолжить играть с&nbsp;котиком\n                </p>\n                <button style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}} onClick={() => {\n                  closePenSuccessPopup();\n                }} className='pen-popup__button' type='button'>\n                  <p style={{width: '100%', textAlign: 'center'}} className='pen-popup__button-text'>\n                    Использовать Пушинку\n                  </p>\n                  <img className='pen-popup__button-img' src=\"assets/images/penpopup-succes-btn.svg\" alt=\"\" />\n                </button>\n              </div>\n            </div>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"pen-popup pen-popup_active\") {\n                setPenPopup('pen-popup');\n              }\n            }} className={penPopup}>\n              <div className='pen-popup__content'>\n                <img onClick={closePenPopup} className='pen-popup__close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <img className='pen-popup__pen-img' src=\"assets/images/main-popup-pen.png\" alt=\"\" />\n                <div className='pen-popup__pen-help'></div>\n                <p className='pen-popup__title'>\n                  Получите больше<br />\n                  Пушинок\n                </p>\n                <p className='pen-popup__subtitle'>\n                  Чтобы восстанавливать пропущенные дни, вам потребуются Пушинки, заработайте их&nbsp;за&nbsp;выполнение заданий\n                </p>\n                <button onClick={() => {\n                  dispatch(setActivePanel('task'));\n                }} className='pen-popup__button' type='button'>\n                  Перейти к заданиями\n                </button>\n              </div>\n            </div>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"pen-popup pen-popup_active\") {\n                setPenWaitPopup('pen-popup');\n              }\n            }} className={penWaitPopup}>\n              <div style={{paddingTop: '44px'}} className='pen-popup__content'>\n                <img onClick={closePenWaitPopup} className='pen-popup__close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <p className='pen-popup__title'>\n                  Немного подождите!\n                </p>\n                <p style={{marginBottom: '51px'}} className='pen-popup__subtitle'>\n                  Этот день ещё закрыт. Возвращайтесь позже, чтобы поиграть с&nbsp;котиком!\n                </p>\n                <button onClick={() => {\n                  setPenWaitPopup(\"pen-popup\");\n                }} className='pen-popup__button' type='button'>\n                  Окей, подожду\n                </button>\n              </div>\n            </div>\n            <div className='main__bg'></div>\n            <div className='main__content'>\n              <div className={endPage}>\n                Сегодня мурлыка отдыхает.<br />\n                Завтра он&nbsp;снова будет рад вашим ласкам!\n              </div>\n              {coins.map((coin, index) => (\n                <Coin key={index} x={coin.x} y={coin.y} />\n              ))}\n              <div className='main__days days'>\n                <div className='days__black'></div>\n                <div className='days__white'>\n                  <img className='days__stand' src=\"assets/images/main-stand.svg\" alt=\"\" />\n                  <div style={{pointerEvents: endClicking ? 'none' : 'all'}} onMouseDown={(event) => startPCClick(event)} onMouseUp={endClick} onTouchStart={(event) => startClick(event)} onTouchEnd={endClick} className={'days__cat'}>\n                    <img style={{display: endClicking ? 'block' : 'none'}} className='cat-end' src=\"assets/images/main-cat-end.png\" alt=\"\" />\n                    <img style={{display: endClicking ? 'none' : 'block'}} className={catBodyClass} src=\"assets/images/cat-body.png\" alt=\"\" />\n                    <div style={{display: endClicking ? 'none' : 'block'}} className={catHeadClass}>\n                      <img className='cat-img cat-img_head' src=\"assets/images/cat-had.png\" alt=\"\" />\n                      <img className='cat-img cat-img_mouth_animate cat-img_mouth' src=\"assets/images/cat-mouth.png\" alt=\"\" />\n                    </div>\n                    <img style={{display: endClicking ? 'none' : 'block'}} className='cat-img cat-img_tail' src=\"assets/images/cat-tail.png\" alt=\"\" />\n                  </div>\n                  {/* <img style={styleCat} onMouseDown={(event) => startPCClick(event)} onMouseUp={endClick} onTouchStart={(event) => startClick(event)} onTouchEnd={endClick} className={coinClass} src={catState} alt=\"\" /> */}\n                  <Swiper ref={swiperRef}\n                          spaceBetween={9}\n                          slidesPerView={'auto'}\n                          >\n                    {[...days].map((day, index) => {\n                      if ((index + 1) < days.length && day.done && !day.reward_obtained) {\n                        return (\n                          <SwiperSlide >\n                            <div onClick={() => {\n                              setPawPopup('paw-popup paw-popup_active');\n                              setGameDayID(day.id);\n                              }} className='days__item day'>\n                              <p className='day__title'>\n                                {index + 1} день\n                              </p>\n                              <img className='day__lapa' src=\"assets/images/main-days-lapa.png\" alt=\"\" />\n                              <button className='day__button' type='button'>\n                                Открыть\n                              </button>\n                            </div>\n                          </SwiperSlide>\n                        )\n                      }\n                      if ((index + 1) < days.length && !day.done && !day.reward_obtained) {\n                        return (\n                          <SwiperSlide >\n                            <div onClick={() => {\n                                setGameDayID(day.id);\n                                if (healsCount > 0) {\n                                  setPenSuccessPopup('pen-popup pen-popup_active');\n                                }\n                                else {\n                                  setPenRejectPopup('pen-popup pen-popup_active')\n                                }\n                              }} className='days__item day-pass'>\n                              <p className='day-pass__title'>\n                                {index + 1} день\n                              </p>\n                              <img className='day-pass__img' src=\"assets/images/day-pass.png\" alt=\"\" />\n                              <button className='day-pass__button' type='button'>\n                                <p className='day-pass__button-text'>\n                                  Получить\n                                </p>\n                                <img className='day-pass__button-img' src=\"assets/images/day-pass-pen.svg\" alt=\"\" />\n                                <p className='day-pass__button-count'>-1</p>\n                              </button>\n                            </div>\n                          </SwiperSlide>\n                        )\n                      }\n                      if (index + 1 == days.length && !day.done && !day.reward_obtained) {\n                        return (\n                          <SwiperSlide >\n                            <div className='days__item day-current'>\n                              <p className='day-current__title'>\n                              {index + 1}  день\n                              </p>\n                              <div className='day-current__count'>\n                                {count}/250\n                              </div>\n                              <div className='day-current__bar-wrapper'>\n                                <div style={{width: progressWidth}} className='day-current__bar'></div>\n                              </div>\n                            </div>\n                          </SwiperSlide>\n                        );\n                      }\n                      if (index + 1 == days.length && day.done && !day.reward_obtained) {\n                        return(\n                          <SwiperSlide >\n                            <div onClick={() => {\n                              setPawPopup('paw-popup paw-popup_active');\n                              setGameDayID(day.id);\n                              }} className='days__item day'>\n                              <p className='day__title'>\n                                {index + 1} день\n                              </p>\n                              <img className='day__lapa' src=\"assets/images/main-days-lapa.png\" alt=\"\" />\n                              <button className='day__button' type='button'>\n                                Открыть\n                              </button>\n                            </div>\n                          </SwiperSlide>\n                        );\n                      }\n                      if (day.reward_obtained) {\n                        return(\n                          <SwiperSlide>\n                            <div className='days__item day-success'>\n                              <img className='day-success__left' src=\"assets/images/day-success-left.png\" alt=\"\" />\n                              <img className='day-success__right' src=\"assets/images/day-success-right.png\" alt=\"\" />\n                              <img className='day-success__center' src=\"assets/images/day-success-center.svg\" alt=\"\" />\n                              <p className='day-success__text'>\n                                День<br />завершен\n                              </p>\n                            </div>\n                          </SwiperSlide>\n                        );\n                      }\n                    })}\n                    {\n                      gameDays.length === 1 ? \n                        <div style={{display: 'none'}}>\n                          \n                        </div>\n                          :\n                      <SwiperSlide >\n                        <div onClick={() => {\n                            setPenWaitPopup('pen-popup pen-popup_active')\n                          }} className='days__item day-block'>\n                          <img className='day-block__lapa' src=\"assets/images/main-days-lapa.png\" alt=\"\" />\n                          <div className='day-block__lock-wrapper'>\n                            <img className='day-block__lock-img' src=\"assets/images/day-block-lock.svg\" alt=\"\" />\n                            <p className='day-block__lock-text'>{days.length + 1} день</p>\n                          </div>\n                        </div>\n                      </SwiperSlide> \n                    }\n                    <SwiperSlide>\n                      <div className='days__item day-plug'>\n                        <img className='day-plug__img' src=\"assets/images/day-plug.svg\" alt=\"\" />\n                        <p className='day-plug__text'>\n                          Дальше<br />\n                          больше\n                        </p>\n                      </div>\n                    </SwiperSlide>\n                  </Swiper>\n                </div>\n              </div>\n              <div className='main__topbar topbar'>\n                <div onClick={penHandler} className='topbar__pen-block'>\n                  <img className='topbar__pen-img' src=\"assets/images/info-pen.svg\" alt=\"\" />\n                  <p className='topbar__pen-count'>{healsCount}</p>\n                  <img className='topbar__pen-arrow' src=\"assets/images/topbar-pen-arrow.png\" alt=\"\" />\n                </div>\n                <img className='topbar__pen-logo' src=\"assets/images/topbar-logo.svg\" alt=\"\" />\n                <div onClick={ticketHandler} className='topbar__ticket-block'>\n                  <img className='topbar__ticket-img' src=\"assets/images/info-ticket.svg\" alt=\"\" />\n                  <p className='topbar__ticket-count'>\n                    {ticketsCount}\n                  </p>\n                  <img className='topbar__ticket-info' src=\"assets/images/topbar-info-img.svg\" alt=\"\" />\n                </div>\n              </div>\n              <div className='main__score'>{count}<span className='main__score_other-color'>/250</span></div>\n            </div>\n          </div>\n        </>\n    );\n}\n\nexport default Main;","import Main from \"./Main\";\r\nexport default Main;","import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { setActivePanel } from \"../../store/mainReducer\";\nimport bridge from '@vkontakte/vk-bridge';\nimport './style.css'\nimport ServerConnect from '../../service';\n\nconst Loading = ({requestPending}) => {\n    const dispatch = useDispatch();\n    const [classPage, setClassPage] = useState(\"loading-page\")\n    useEffect(() => {\n      if (requestPending) {\n        setTimeout(() => {\n          // dispatch(setActivePanel(\"info\"));\n          if (localStorage.getItem('onboarding') === 'true') {\n            setClassPage('loading-page loading-page_disable')\n            setTimeout(() => {\n              dispatch(setActivePanel(\"main\"));\n            }, 500)\n          }\n          else {\n            setClassPage('loading-page loading-page_disable')\n            setTimeout(() => {\n              dispatch(setActivePanel(\"onboarding-first\"));\n            }, 500)\n          }\n        }, 2500);\n      }\n    }, [requestPending]);\n\n    return (\n        <div className={`container ${classPage}`}>\n            <img className='loading-page__topBG' src=\"assets/images/loading-page-topBG.svg\" alt=\"\" />\n            <img className='loading-page__top-left-logo' src=\"assets/images/loading-page-bg.svg\" alt=\"\" />\n            <img className='loading-page__center-logo' src=\"assets/images/loading-page-logo.png\" alt=\"\" />\n            <img className='loading-page__main-img' src=\"assets/images/loading-page-main-img.png\" alt=\"\" />\n            <img className='loading-page__paws' src=\"assets/images/loading-page-paws.svg\" alt=\"\" />\n            <div className='loading-page__bottomBG'></div>\n            <div className=\"loading-wrapper\">\n                <div className=\"loading-block loading-page__loading-block\">\n                    <div className=\"loading-block__bar\"></div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Loading;","import Loading from \"./Loading\";\n\nexport default Loading;","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setActiveModal, setModalName } from \"../store/mainReducer\"\n\nconst Overlay = (props) => {\n    const dispatch = useDispatch();\n    const activeModal = useSelector(state => state.main.activeModal);\n    function overlayHandler() {\n        dispatch(setActiveModal(false));\n        dispatch(setModalName(''));\n    }\n\n    return (\n        <div className={activeModal ? 'overlay overlay_active' : 'overlay'} onClick={overlayHandler}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Overlay;\n\n","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport 'swiper/css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActivePanel } from '../../store/mainReducer';\n\nconst OnBoardingFirst = ({}) => {\n  const dispatch = useDispatch();\n  const [classPage, setClassPage] = useState('onboarding1');\n  useEffect(() => {\n    setClassPage('onboarding1 onboarding1_active');\n  }, []);\n  function buttonHandler() {\n    setClassPage('onboarding1');\n    setTimeout(() => {     \n      dispatch(setActivePanel(\"onboarding-second\"));\n    }, 500)\n  }\n    return (\n        <>\n          <div className={`container ${classPage}`}>\n            <img className='onboarding1__topBG' src=\"assets/images/loading-page-topBG.svg\" alt=\"\" />\n            <img className='onboarding1__main-img' src=\"assets/images/onboarding1__main-img.png\" alt=\"\" />\n            <div className='onboarding1__bottomBG'></div>\n            <img className='onboarding1__paws' src=\"assets/images/onboarding1-paws.svg\" alt=\"\" />\n            <div className='onboarding1__info-wrapper'>\n              <p className='onboarding1__title'>\n              Самый замурчательный <br /> кликер от «Пятëрочки»\n              </p>\n              <p className='onboarding1__subtitle'>\n                Ваш пушистый друг уже ждёт вас! В&nbsp;&laquo;Мурлыкере&raquo; каждый тап&nbsp;&mdash; это подарок любви и&nbsp;заботы \n                вашему котику.\n              </p>\n              <button onClick={buttonHandler} className='onboarding1__button' type='button'>Продолжить</button>\n            </div>\n          </div>\n        </>\n    );\n}\n\nexport default OnBoardingFirst;","import OnBoardingFirst from \"./OnBoardingFirst\";\r\nexport default OnBoardingFirst;","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport 'swiper/css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActivePanel } from '../../store/mainReducer';\n\nconst OnBoardingSecond = ({}) => {\n  const dispatch = useDispatch();\n  const [classPage, setClassPage] = useState('onboarding2');\n  function buttonHandler() {\n    setClassPage(\"onboarding2\");\n    setTimeout(() => {\n      dispatch(setActivePanel('main'));\n      localStorage.setItem(\"onboarding\", \"true\");\n    }, 500)\n  }\n  useEffect(() => {\n    setClassPage('onboarding2 onboarding2_active');\n  }, []);\n    return (\n        <>\n          <div className={`container ${classPage}`}>\n            <img className='onboarding2__topBG' src=\"assets/images/loading-page-topBG.svg\" alt=\"\" />\n            <img className='onboarding2__main-img' src=\"assets/images/onboarding2-main-img.png\" alt=\"\" />\n            <div className='onboarding2__bottomBG'></div>\n            <img className='onboarding2__paws' src=\"assets/images/onboarding1-paws.svg\" alt=\"\" />\n            <div className='onboarding2__info-wrapper'>\n              <p className='onboarding2__title'>\n              Заходите каждый день \n              <br /> и получайте призы!\n              </p>\n              <p className='onboarding2__subtitle'>\n                Каждый день&nbsp;&mdash; новые подарки \n                для вашего любимца. Не&nbsp;забывайте заходить, чтобы ваш котик был всегда доволен!\n              </p>\n              <button onClick={buttonHandler} className='onboarding2__button' type='button'>Начать</button>\n            </div>\n          </div>\n        </>\n    );\n}\n\nexport default OnBoardingSecond;","import OnBoardingSecond from \"./OnBoardingSecond\";\r\nexport default OnBoardingSecond;","import React, { useRef, useState } from 'react'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { setActivePanel } from \"../../store/mainReducer\";\nimport bridge from '@vkontakte/vk-bridge';\nimport './style.css'\nimport ServerConnect from '../../service';\nimport homeGreen from '../../../public/assets/images/static/navbar-home-green.png';\nimport homeWhite from '../../../public/assets/images/static/navbar-home-white.png';\nimport infoGreen from '../../../public/assets/images/static/navbar-info-green.png';\nimport infoWhite from '../../../public/assets/images/static/navbar-info-white.png';\nimport taskGreen from \"../../../public/assets/images/static/navbar-task-green.png\";\nimport taskWhite from \"../../../public/assets/images/static/navbar-task-white.png\";\nimport prizeGreen from \"../../../public/assets/images/static/navbar-prize-green.png\";\nimport prizeWhite from '../../../public/assets/images/static/navbar-prize-white.png';\n\nconst Navbar = ({isActive}) => {\n    const currentScreen = useSelector((state) => state.main.activePanel);\n    useEffect(() => {\n      // console.log(currentScreen)\n      if (currentScreen == 'main') {\n        setClassMain({\n          class: 'navbar__button navbar__button_active',\n          src: homeWhite\n        });\n        setClassInfo({\n          class: 'navbar__button',\n          src: infoGreen\n        });\n        setClassTask({\n          class: 'navbar__button',\n          src: taskGreen\n        });\n        setClassPrize({\n          class: 'navbar__button',\n          src: prizeGreen\n        });\n      }\n      if (currentScreen == 'task') {\n        setClassMain({\n          class: 'navbar__button',\n          src: homeGreen\n        });\n        setClassInfo({\n          class: 'navbar__button',\n          src: infoGreen\n        });\n        setClassTask({\n          class: 'navbar__button navbar__button_active',\n          src: taskWhite\n        });\n        setClassPrize({\n          class: 'navbar__button',\n          src: prizeGreen\n        });\n      }\n      if (currentScreen == 'info') {\n        setClassMain({\n          class: 'navbar__button',\n          src: homeGreen\n        });\n        setClassInfo({\n          class: 'navbar__button navbar__button_active',\n          src: infoWhite\n        });\n        setClassTask({\n          class: 'navbar__button',\n          src: taskGreen\n        });\n        setClassPrize({\n          class: 'navbar__button',\n          src: prizeGreen\n        });\n      }\n      if (currentScreen == 'prize') {\n        setClassMain({\n          class: 'navbar__button',\n          src: homeGreen\n        });\n        setClassInfo({\n          class: 'navbar__button',\n          src: infoGreen\n        });\n        setClassTask({\n          class: 'navbar__button',\n          src: taskGreen\n        });\n        setClassPrize({\n          class: 'navbar__button navbar__button_active',\n          src: prizeWhite\n        });\n      }\n    }, [currentScreen])\n    const dispatch = useDispatch();\n    const [classMain, setClassMain] = useState({\n      class: 'navbar__button navbar__button_active',\n      src: homeWhite,\n    });\n    const [classInfo, setClassInfo] = useState({\n      class: 'navbar__button',\n      src: infoGreen\n    });\n    const [classTask, setClassTask] = useState({\n      class: 'navbar__button',\n      src: taskGreen\n    });\n    const [classPrize, setClassPrize] = useState({\n      class: 'navbar__button',\n      src: prizeGreen\n    });\n    function buttonHandler(name) {\n      if (name === \"Главная\") {\n        dispatch(setActivePanel('main'))\n      }\n      if (name === \"Информация\") {\n        dispatch(setActivePanel('info'))\n      }\n      if (name === \"Задания\") {\n        dispatch(setActivePanel('task'))\n      }\n      if (name === \"Призы\") {\n        dispatch(setActivePanel('prize'))\n      }\n    }\n\n    return (\n        <div className='navbar' style={{display: isActive ? 'flex' : 'none'}}>\n          <div onClick={() => buttonHandler('Главная')} className={classMain.class}>\n            <img className='navbar__button-img' src={classMain.src} alt=\"\" />\n            <p className='navbar__button-text'>Главная</p>\n          </div>\n          <div onClick={() => buttonHandler('Информация')} className={classInfo.class}>\n            <img className='navbar__button-img' src={classInfo.src} alt=\"\" />\n            <p className='navbar__button-text'>Информация</p>\n          </div>\n          <div onClick={() => buttonHandler('Задания')} className={classTask.class}>\n            <img className='navbar__button-img' src={classTask.src} alt=\"\" />\n            <p className='navbar__button-text'>Задания</p>\n          </div>\n          <div onClick={() => buttonHandler('Призы')} className={classPrize.class}>\n            <img className='navbar__button-img' src={classPrize.src} alt=\"\" />\n            <p className='navbar__button-text'>Призы</p>\n          </div>\n        </div>\n    );\n}\n\n\nexport default Navbar;","import Navbar from \"./Navbar\";\n\nexport default Navbar;","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveNavbar, setActivePanel, setCheques, setPrizes, setUserAvatar, setUserName, setUserNumber } from '../../store/mainReducer';\nimport bridge from '@vkontakte/vk-bridge';\nimport Snackbar from '../Snackbar';\nimport ServerConnect from '../../service';\n\nconst Info = ({overlayClass, setOverlayClass}) => {\n  const faqArray = [\n    {\n      question: 'Сроки проведения',\n      answer: 'с 19.09 2024 г. по 31.10 2024 г.'\n    },\n    // {\n    //   question: 'Сроки проведения',\n    //   answer:    `Lorem ipsum dolor sit amet consectetur adipisicing elit. Esse quod vel magnam fugit molestias! Eius sint provident voluptatum, modi ab doloribus quasi minima repudiandae labore perspiciatis ratione ipsam, neque et.\n    //               Accusantium similique recusandae aspernatur architecto, explicabo placeat minus totam necessitatibus assumenda distinctio dolor ab, ratione laborum quia saepe illum aliquam provident minima sed quo quae delectus perspiciatis! Ab, quidem enim.\n    //               Quia doloremque eos, animi pariatur obcaecati aliquam totam earum eligendi quidem dicta voluptatibus error sequi saepe fugit facere est et debitis deleniti magnam corrupti. Ipsam eligendi modi doloribus a consectetur!\n    //               Libero maxime quidem reiciendis aspernatur. Modi, obcaecati earum. Pariatur excepturi quos iure dolores voluptatibus perferendis officia soluta ipsum illo natus architecto explicabo, nostrum ipsa in, dicta qui cumque porro eveniet.\n    //               Eveniet reprehenderit provident dicta recusandae dolores facere, unde consequuntur tempora odio perferendis rem iure porro officia, praesentium sequi! Libero eius in hic sint, est officiis beatae commodi natus! Quisquam, corrupti.\n    //               Ipsam nihil ullam illo sit error officia enim deserunt in rem consectetur ipsa est alias perspiciatis architecto vel pariatur, nobis id magnam explicabo praesentium! Aspernatur voluptatibus deleniti necessitatibus? In, aliquid?\n    //               Fugit hic laborum deserunt corporis sed suscipit voluptatibus distinctio inventore ea eos laudantium rerum repudiandae quam qui expedita sunt quis exercitationem dolores, vitae ipsa quos fuga, totam veniam perferendis. Ullam!\n    //               Aperiam maiores omnis aspernatur. Voluptates consectetur, mollitia adipisci dolores iusto nobis deserunt! Voluptatibus consequuntur laudantium facere suscipit, aut, ex quidem voluptates laborum reiciendis et laboriosam nesciunt officiis id blanditiis saepe.\n    //               Amet non officia libero, molestias veritatis similique error ipsa culpa? Provident eaque repellat nam vitae? Fugit tempora accusantium nihil quis asperiores praesentium? Incidunt dolore perferendis tenetur vero, labore fugiat repellendus?\n    //               Praesentium expedita autem velit atque soluta accusamus ratione, suscipit quasi voluptate dolor voluptates, recusandae amet necessitatibus, officia doloribus non dolores? Ipsam temporibus non dolor tempora vero nihil amet nobis autem!`\n    // },\n    // {\n    //   question: 'Сроки проведения',\n    //   answer:   `Lorem ipsum dolor sit amet consectetur adipisicing elit. Magnam dolor autem saepe corporis ullam neque voluptate asperiores inventore at ea! Ex possimus maiores necessitatibus itaque pariatur? Excepturi harum iusto quidem.\n    //             Numquam cumque mollitia similique itaque voluptatum voluptatibus optio obcaecati porro? Illo ex quae, velit quia culpa placeat eum quos nam exercitationem, ratione nihil commodi inventore vitae quo quisquam ducimus non.\n    //             Dicta excepturi sapiente quidem quasi odit adipisci itaque deleniti consectetur aperiam, repudiandae officiis, quis aliquid debitis molestias temporibus sed hic blanditiis, reiciendis esse possimus cumque! Velit, dignissimos minus! Quae, tempore.\n    //             Delectus quod temporibus excepturi laborum odio, neque, quia optio nihil aliquam necessitatibus hic eius accusamus iure officiis, quaerat eligendi? Nam voluptas nemo velit doloribus assumenda obcaecati deserunt hic ea minus?\n    //             Vel ullam itaque incidunt magni culpa natus alias rem similique, quis aliquid veritatis amet provident aperiam molestiae, quos commodi inventore maxime, deserunt minus! Ut beatae totam sed nobis repudiandae quidem.`\n    // },\n  ]\n  const dispatch = useDispatch();\n  const [classPage, setClassPage] = useState('info');\n  const [activeElements, setActiveElements] = useState({});\n\n  const handleClick = (index) => {\n    setActiveElements((prevState) => ({\n      ...prevState,\n      [index]: !prevState[index],\n    }));\n  };\n  useEffect(() => {\n    setClassPage('info info_active');\n    dispatch(setActiveNavbar(true));\n  }, []);\n    return (\n          <div className={`container ${classPage}`}>\n            <div className='info__bg'></div>\n            <div className='info__content'>\n              <p className='info__title'>\n                Информация\n              </p>\n              <div className='info__banner'>\n                <div className='info__banner-bg'></div>\n                <img className='info__banner-img' src=\"assets/images/info-banner-img.png\" alt=\"\" />\n                <p className='info__banner-title'>\n                  Самый милый кликер <br />\n                  от&nbsp;«Пятëрочки»\n                </p>\n                <p className='info__banner-subtitle'>\n                  Мурлыкер&nbsp;&mdash; это игра, где каждый день приносит радость вашему котику и&nbsp;награды вам. Гладьте котика, зарабатывайте Лапки и&nbsp;Билетики, и&nbsp;участвуйте в&nbsp;розыгрыше &nbsp;потрясающих призов!\n                </p>\n              </div>\n              <div className='info__boosts'>\n                <div className='info__boost'>\n                  <img className='info__boost-img' src=\"assets/images/info-pen.svg\" alt=\"\" />\n                  <p className='info__boost-title'>\n                    Получайте<br />\n                    Пушинки\n                  </p>\n                  <p className='info__boost-subtitle'>\n                    Зарабатывайте Пушинки, чтобы восстанавливать пропущенные дни\n                  </p>\n                </div>\n                <div className='info__boost'>\n                  <img className='info__boost-img' src=\"assets/images/info-ticket.svg\" alt=\"\" />\n                  <p className='info__boost-title'>\n                    Собирайте<br />\n                    Билетики\n                  </p>\n                  <p className='info__boost-subtitle'>\n                    Они дают шанс участвовать в&nbsp;главном розыгрыше.\n                  </p>\n                </div>\n              </div>\n              <p className='info__middle-title'>\n                Собирайте Лапки, получайте\n                Билетики и&nbsp;участвуйте\n                в&nbsp;розыгрыше призов\n                от&nbsp;«Пятëрочки»\n              </p>\n              <div className='info__main-prize'>\n                <div className='info__main-prize-help'></div>\n                <img className='info__main-prize-img' src=\"assets/images/info-main-prize.png\" alt=\"\" />\n                <p className='info__main-prize-title'>Главный приз</p>\n                <p className='info__main-prize-name'>\n                  Смартфон\n                  <br />\n                  Apple iPhone 16\n                </p>\n                <p className='info__main-prize-count'>1 шт</p>\n              </div>\n              <div className='info__swiper'>\n                <Swiper\n                        spaceBetween={8}\n                        slidesPerView={'auto'}\n                        >\n                  <SwiperSlide>\n                    <div className='info__swiper-card'>\n                      <img style={{width: '108px', top: '-52px', left:'50%'}} className='info__swiper-card-img' src=\"assets/images/info-swiper-img-1.png\" alt=\"\" />\n                      <p className='info__swiper-card-text'>\n                        Колонка<br />\n                        Xiaomi S28D\n                      </p>\n                      <p className='info__swiper-card-count'>\n                        5 шт\n                      </p>\n                    </div>\n                  </SwiperSlide>\n                  <SwiperSlide>\n                    <div className='info__swiper-card'>\n                      <img style={{width: '132px', left: '50%', top: '-17px'}} className='info__swiper-card-img' src=\"assets/images/info-swper-img-2.png\" alt=\"\" />\n                      <p className='info__swiper-card-text'>\n                        3000 рублей<br />\n                        на Wildberries\n                      </p>\n                      <p className='info__swiper-card-count'>\n                        10 шт\n                      </p>\n                    </div>\n                  </SwiperSlide>\n                  <SwiperSlide>\n                    <div className='info__swiper-card'>\n                      <img style={{width: '136px', left: '50%', top: '-33px'}} className='info__swiper-card-img' src=\"assets/images/info-swiper-img-3.png\" alt=\"\" />\n                      <p className='info__swiper-card-text'>\n                        Наушники<br />\n                        JBL Tune\n                      </p>\n                      <p className='info__swiper-card-count'>\n                        2 шт\n                      </p>\n                    </div>\n                  </SwiperSlide>\n                  <SwiperSlide>\n                    <div className='info__swiper-card'>\n                      <img style={{width: '131px', left: '50%', top: '-20px'}} className='info__swiper-card-img' src=\"assets/images/info-swiper-img-4.png\" alt=\"\" />\n                      <p className='info__swiper-card-text'>\n                        Умная колонка<br />\n                        Sberboom Mini\n                      </p>\n                      <p className='info__swiper-card-count'>\n                        10 шт\n                      </p>\n                    </div>\n                  </SwiperSlide>\n                </Swiper>\n              </div>\n              <div className='info__cloud'>\n                <img className='info__cloud-img' src=\"assets/images/info-cloud.png\" alt=\"\" />\n                <p className='info__cloud-title'>\n                  Мяу-мяу! Нас ждёт самое <br /> милое приключение!\n                </p>\n                <p className='info__cloud-subtitle'>\n                  Каждый день&nbsp;&mdash; новая Лапка и&nbsp;подарки для вас! \n                  Соберайте Лапки, чтобы получать больше призов, и&nbsp;я&nbsp;всегда был доволен!\n                </p>\n              </div>\n              <div className='info__faq-title'>\n                Ответы на частые <br />\n                вопросы\n              </div>\n              <div className='info__faq'>\n                {faqArray.map((faq, index) => (\n                  <div key={index} className={activeElements[index] ? 'info__faq-item info__faq-item_active' : 'info__faq-item'}>\n                    <div onClick={() => handleClick(index)} className='info__faq-item-question'>\n                      <p className='info__faq-item-text'>{faq.question}</p>\n                      <img className='info__faq-item-arrow' src=\"assets/images/faq-arrow.svg\" alt=\"\" />\n                    </div>\n                    <div className='info__faq-item-answer'>\n                      {faq.answer}\n                    </div>\n                  </div>\n                ))}\n                <div className='info__faq-link'>\n                  <a className='info__faq-href' target='_blank' href=\"https://docs.google.com/document/d/1KbXxk0Exg9ZRjlzLtA4E_HmsQpL5QDXU61awhTZPYTo/edit?usp=sharing\"></a>\n                  <img className='info__faq-link-img' src=\"assets/images/info-link-img.svg\" alt=\"\" />\n                  <p className='info__faq-link-text'>\n                    Правила и условия\n                  </p>\n                  <img className='info__faq-link-arrow' src=\"assets/images/info-faq-arrow.png\" alt=\"\" />\n                </div>\n              </div>\n                \n            </div>\n          </div>\n    );\n}\n\nexport default Info;","import Info from \"./Info\";\r\nexport default Info;","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveNavbar, setActivePanel, setCheques, setFriendsCount, setPrizes, setQuestID, setQuestLink, setQuestText, setTasks, setUserAvatar, setUserName, setUserNumber } from '../../store/mainReducer';\nimport bridge from '@vkontakte/vk-bridge';\nimport Snackbar from '../Snackbar';\nimport ServerConnect from '../../service';\nimport taskCompleted from '../../../public/assets/images/static/task-completed.png';\nimport taskNotCompleted from '../../../public/assets/images/static/task-arrow.png';\n\nconst Task = ({overlayClass, setOverlayClass}) => {\n  const dispatch = useDispatch();\n  const referal = useSelector(state => state.main.referal);\n  const tgID = useSelector(state => state.main.tgID);\n  const friendsCount = useSelector(state => state.main.friendsCount);\n  const healsCount = useSelector((state) => state.main.heals);\n  const tasksArray = useSelector((state) => state.main.tasks)\n  const [classPage, setClassPage] = useState('task');\n  const [friendPopup, setFriendPopup] = useState('task__friend-popup');\n  const [topPopup, setTopPopup] = useState('task__top-popup');\n  function buttonHandler(text) {\n    if (text == 'invite') {\n      setFriendPopup('task__friend-popup task__friend-popup_active');\n    }\n    else {\n      dispatch(setActivePanel('rebus'));\n    }\n  }\n  function closePopup() {\n    setFriendPopup('task__friend-popup')\n  }\n  function encryptTelegramId(telegramId) {\n    // Создаем словарь для сопоставления цифр и букв\n    const dictionary = {\n      '0': 'x', '1': 'q', '2': 'z', '3': 'p', '4': 'a',\n      '5': 'k', '6': 'w', '7': 'r', '8': 'n', '9': 'j'\n    };\n  \n    let encryptedId = '';\n    for (const digit of telegramId) {\n      encryptedId += dictionary[digit];\n    }\n  \n    return encryptedId;\n  }\n  function friendCopyHandler() {\n    navigator.clipboard.writeText(`https://t.me/MurMur_click_bot?start=${encryptTelegramId(tgID.toString())}`)\n     .then(() => {\n     })\n     .catch(err => {\n     });\n    setTopPopup('task__top-popup task__top-popup_active');\n    setTimeout(() => {\n      setTopPopup('task__top-popup');\n    }, 2500)\n  }\n  useEffect(() => {\n    setClassPage('task task_active');\n    dispatch(setActiveNavbar(true));\n    ServerConnect.getUser('/users/', referal)\n      .then((data) => {\n        const sortedArray = data.quests;\n        sortedArray.sort((a, b) => {\n          if (a.done === b.done) {\n            return 0;\n          }\n          if (a.done) {\n            return 1;\n          }\n          return -1;\n        });\n        dispatch(setTasks(sortedArray));\n        dispatch(setFriendsCount(data.invited_friends));\n      })\n      .catch((err) => {});\n  }, []);\n    return (\n        <>\n          <div className={`container ${classPage}`}>\n            <div className={topPopup}>\n              Ссылка скопирована\n            </div>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"task__friend-popup task__friend-popup_active\") {\n                setFriendPopup('task__friend-popup');\n              }\n            }} className={friendPopup}>\n              <div className='task__friend-content'>\n                <img onClick={closePopup} className='task__friend-close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <img className='task__friend-img' src=\"assets/images/friend-popup.svg\" alt=\"\" />\n                <p className='task__friend-title'>\n                  Пригласите друга\n                </p>\n                <p className='task__friend-subtitle'>\n                  Приглашайте друзей и&nbsp;получайте Пушинки, чтобы закрывать пропущенные дни\n                </p>\n                <div className='task__friend-buttons'>\n                  <button className='task__friend-invite-btn' type='button'>\n                    <a className='task__friend-link' href={`https://t.me/share/url?url=https://t.me/MurMur_click_bot?start=${encryptTelegramId(tgID.toString())}`}></a>\n                    Пригласить друзей\n                  </button>\n                  <div onClick={friendCopyHandler} className='task__friend-copy-btn'>\n                    <img className='task__friend-copy-img' src=\"assets/images/friend-popup-button.svg\" alt=\"\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='task__bg'></div>\n            <div className='task__content'>\n              <p className='task__title'>\n                Задания\n              </p>\n              <div className='task-info'>\n                <div className='task__friends'>\n                  <img className='task__friends-img' src=\"assets/images/task-people-img.svg\" alt=\"\" />\n                  <p className='task__friends-text'>\n                    {friendsCount}\n                  </p>\n                </div>\n                <div className='task__pen'>\n                  <img className='task__pen-img' src=\"assets/images/info-pen.svg\" alt=\"\" />\n                  <p className='task__pen-text'>\n                    {healsCount}\n                  </p>\n                </div>\n              </div>\n              {tasksArray.map((task, index) => {\n                return (\n                  <div onClick={() => {\n                    if (!task.done) {\n                      dispatch(setQuestID(task.id));\n                      if (task.type == 'quiz') {\n                        dispatch(setQuestLink(task.url));\n                        dispatch(setQuestText(task.text));\n                      }\n                      buttonHandler(task.type);\n                    }\n                  }} key={index} style={{pointerEvents: task.done ? 'none' : 'all'}} className='task__taska taska'>\n                    <img className='taska__people-img' src=\"assets/images/task-people-img.svg\" alt=\"\" />\n                    <div className='taska__info'>\n                      <p className='taska__info-text'>\n                        {task.type == 'invite' ? task.text : 'Разгадайте ребус'}\n                      </p>\n                      <div className='taska__info-pen'>\n                        <p className='taska__info-pen-count'>+1</p>\n                        <img className='taska__info-pen-img' src='assets/images/task-pen.svg' alt=\"\" />\n                      </div>\n                    </div>\n                    <img className='taska__arrow' src={task.done ? taskCompleted : taskNotCompleted} alt=\"\" />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </>\n    );\n}\n\nexport default Task;","import Task from \"./Task\";\r\nexport default Task;","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveNavbar, setActivePanel } from '../../store/mainReducer';\n\nconst Prize = ({overlayClass, setOverlayClass}) => {\n  const dispatch = useDispatch();\n  const tgID = useSelector(state => state.main.tgID);\n  const prizes = useSelector(state => state.main.prizes);\n  const tickets = useSelector(state => state.main.tickets); \n//   const prizes = [\n//     {\n//         \"type\": \"Скидка 500₽!\",\n//         \"data\": \"МУРЛЫКЕР\",\n//         \"description\": \"Скидка 500₽ на первый заказ от 1500₽ из «Пятëрочки»\"\n//     },\n//     {\n//         \"type\": \"Скидка 500₽!\",\n//         \"data\": \"ЛАПКА\",\n//         \"description\": \"Скидка 500₽ на первый заказ от 1500₽ из «Пятëрочки»\"\n//     },\n//     {\n//         \"type\": \"Скидка 25%!\",\n//         \"data\": \"КОТИК\",\n//         \"description\": \"Скидка 25% на первый заказ от 1500₽ из «Пятëрочки»\"\n//     },\n//     {\n//         \"type\": \"Скидка 500₽!\",\n//         \"data\": \"ДОСТАВКА\",\n//         \"description\": \"Скидка 500₽ на первый заказ от 1500₽ из «Пятëрочки»\"\n//     }\n// ]\n// const tickets = [\n//   {\n//       \"id\": 2,\n//       \"type\": \"invite\",\n//       \"done\": false,\n//       \"text\": \"Пригласить 3 друзей\",\n//       \"friends_amount\": 3\n//   },\n//   {\n//       \"id\": 3,\n//       \"type\": \"invite\",\n//       \"done\": false,\n//       \"text\": \"Пригласить 5 друзей\",\n//       \"friends_amount\": 5\n//   },\n//   {\n//       \"id\": 1,\n//       \"type\": \"invite\",\n//       \"done\": true,\n//       \"text\": \"Пригласить 1 друга\",\n//       \"friends_amount\": 1\n//   },\n//   {\n//       \"id\": 4,\n//       \"type\": \"quiz\",\n//       \"done\": true,\n//       \"text\": \"Решить ребус\",\n//       \"friends_amount\": null\n//   }\n// ]\n  const [classPage, setClassPage] = useState('prize');\n  const [infoPopup, setInfoPopup] = useState('prize__info-popup');\n  const [promoClass, setPromoClass] = useState('prize__nav-item prize__nav-item_active');\n  const [ticketClass, setTicketClass] = useState('prize__nav-item');\n  const [promosClass, setPromosClass] = useState('promos promos_active');\n  const [ticketsClass, setTicketsClass] = useState('tickets');\n  const [topPopup, setTopPopup] = useState('prize__top-popup');\n  useEffect(() => {\n    setClassPage('prize prize_active');\n    dispatch(setActiveNavbar(true));\n    if (prizes.length == 0) {\n      setPromoClass('prize__nav-item');\n      setTicketClass('prize__nav-item prize__nav-item_active');\n      setPromosClass(\"promos\");\n      setTicketsClass('tickets tickets_active')\n    }\n    if (tickets.length == 0) {\n      setPromoClass('prize__nav-item prize__nav-item_active');\n      setTicketClass('prize__nav-item');\n      setPromosClass(\"promos promos_active\");\n      setTicketsClass('tickets')\n    }\n  }, []);\n  function copyHandler(code) {\n    setTopPopup('prize__top-popup prize__top-popup_active');\n    navigator.clipboard.writeText(code)\n     .then(() => {\n     })\n     .catch(err => {\n     });\n    setTimeout(() => {\n      setTopPopup('prize__top-popup');\n    }, 2500)\n  }\n  function buttonHandler(type) {\n    if (type === \"Промо\") {\n      setPromoClass('prize__nav-item prize__nav-item_active');\n      setTicketClass(\"prize__nav-item\");\n      setPromosClass(\"promos promos_active\");\n      setTicketsClass('tickets')\n    }\n    else {\n      setPromoClass('prize__nav-item');\n      setTicketClass(\"prize__nav-item prize__nav-item_active\");\n      setPromosClass(\"promos\");\n      setTicketsClass('tickets tickets_active')\n    }\n  }\n  function closePopup() {\n    setInfoPopup(\"prize__info-popup\");\n  }\n  function mainHandler() {\n    dispatch(setActivePanel(\"main\"));\n  }\n    return (\n          <div className={`container ${classPage}`}>\n            <div className={topPopup}>\n              Промокод скопирован\n            </div>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"prize__info-popup prize__info-popup_active\") {\n                setInfoPopup('prize__info-popup');\n              }\n            }} className={infoPopup}>\n              <div className='prize__info-content'>\n                <img onClick={closePopup} className='prize__info-close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <p className='prize__info-title'>Как получить Лапку?</p>\n                <p className='prize__info-subtitle'>\n                  Каждый день гладьте своего котика, чтобы он&nbsp;был счастлив. За&nbsp;каждый завершённый день вы&nbsp;получите одну Лапку. Используйте их&nbsp;для получения призов\n                </p>\n                <button onClick={mainHandler} className='prize__info-button' type='button'>\n                  Погладить котика\n                </button>\n              </div>\n            </div>\n            <div className='prize__bg'></div>\n            <div className='prize__content'>\n              <div style={{display: prizes.length === 0 && tickets.length === 0 ? 'none' : 'block'}} className='prize__exist-prizes'>\n                <p className='prize__title'>\n                  Призы\n                </p>\n                <div className='prize__nav-block'>\n                  <div onClick={() => buttonHandler('Промо')} className={promoClass}>\n                    Промокоды\n                  </div>\n                  <div onClick={buttonHandler} className={ticketClass}>\n                    Билетики\n                  </div>\n                </div>\n                <div className={promosClass}>\n                  <div style={{display: prizes.length === 0 ? 'block': 'none'}} className='prize__not-prizes-info prize__not-prizes-info-other'>\n                    <img className='prize__not-prizes-img' src=\"assets/images/no-prizes.svg\" alt=\"\" />\n                    <p className='prize__not-prizes-title'>\n                      У вас нет призов\n                    </p>\n                    <p className='prize__not-prizes-subtitle'>\n                      Вы&nbsp;еще не&nbsp;получили Лапку, чтобы забрать ваш первый приз\n                    </p>\n                    <button onClick={() => {setInfoPopup('prize__info-popup prize__info-popup_active')}} className='prize__not-prizes-button prize__not-prizes-button-other' type='button'>\n                      Как получить Лапку\n                    </button>\n                  </div>\n                  {prizes.map((promo, index) => (\n                    <div key={index} className='promo'>\n                      <div className='promo__top-info'>\n                        <img className='promo__top-img' src=\"assets/images/promo-prize-img.svg\" alt=\"\" />\n                        <p className='promo__top-text'>\n                          {promo.description}\n                        </p>\n                      </div>\n                      <div className='promo__block'>\n                        <div className='promo__block-left'>\n                          <p className='promo__block-title'>Промокод:</p>\n                          <p className='promo__block-subtitle'>\n                            {promo.data}\n                          </p>\n                        </div>\n                        <img onClick={() => copyHandler(promo.data)} className='promo__block-img' src=\"assets/images/promo-copy.svg\" alt=\"\" />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className={ticketsClass}>\n                  <div style={{display: tickets.length === 0 ? 'block': 'none'}} className='prize__not-prizes-info prize__not-prizes-info-other'>\n                    <img className='prize__not-prizes-img' src=\"assets/images/no-prizes-ticket.svg\" alt=\"\" />\n                    <p className='prize__not-prizes-title'>\n                      У вас нет Билетиков\n                    </p>\n                    <p className='prize__not-prizes-subtitle'>\n                      Вы&nbsp;еще не&nbsp;получили Билетики, продолжайте гладить Мурлыку\n                    </p>\n                    <button onClick={() => {setInfoPopup('prize__info-popup prize__info-popup_active')}} className='prize__not-prizes-button prize__not-prizes-button-other' type='button'>\n                      Как получить Лапку\n                    </button>\n                  </div>\n                  {tickets.map((ticket, index) => (\n                    <div key={index} className='ticket'>\n                      <img className='ticket__img' src=\"assets/images/prizes-ticket-img.svg\" alt=\"\" />\n                      <p className='ticket__text'>\n                        Ваш Билетик\n                      </p>\n                      <p className='ticket__number'>\n                        {ticket.id}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div style={{display: prizes.length === 0 && tickets.length === 0 ? 'block' : 'none'}} className='prize__not-prizes'>\n                <p className='prize__not-prizes-main-title'>\n                  Призы\n                </p>\n                <div className='prize__not-prizes-info'>\n                  <img className='prize__not-prizes-img' src=\"assets/images/no-prizes.svg\" alt=\"\" />\n                  <p className='prize__not-prizes-title'>\n                    У вас нет призов\n                  </p>\n                  <p className='prize__not-prizes-subtitle'>\n                    Вы&nbsp;еще не&nbsp;получили Лапку, чтобы забрать ваш первый приз\n                  </p>\n                </div>\n                <button onClick={() => {setInfoPopup('prize__info-popup prize__info-popup_active')}} className='prize__not-prizes-button' type='button'>\n                  Как получить Лапку\n                </button>\n              </div>\n            </div>\n          </div>\n    );\n}\n\nexport default Prize;","import Prize from \"./Prize\";\r\nexport default Prize;","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveNavbar, setActivePanel, setCheques, setHeals, setPrizes, setTasks, setTickets, setUserAvatar, setUserName, setUserNumber } from '../../store/mainReducer';\nimport { isIOS } from 'react-device-detect';\nimport ServerConnect from '../../service';\n\nconst Rebus = ({overlayClass, setOverlayClass}) => {\n  function lockScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    window.onscroll = function() {\n      window.scrollTo(scrollLeft, scrollTop);\n    };\n  }\n  function unlockScroll() {\n    window.onscroll = null;\n  }\n  const dispatch = useDispatch();\n  const questID = useSelector(state => state.main.questID);\n  const questLink = useSelector(state => state.main.questLink);\n  const questText = useSelector(state => state.main.questText);\n  const tgID = useSelector(state => state.main.tgID);\n  const [classPage, setClassPage] = useState('rebus');\n  const [rebusBtn, setRebusBtn] = useState('rebus__input-button');\n  const [rebusBlock, setRebusBlock] = useState('rebus__input-block');\n  const [submitClass, setSubmitClass] = useState('rebus__submit-popup');\n  const [rejectClass, setRejectClass] = useState('rebus__reject-popup');\n  const [inputValue, setInputValue] = useState('');\n  function backHandler() {\n    dispatch(setActivePanel(\"task\"));\n  }\n  function closeSubmit() {\n    dispatch(setActivePanel(\"task\"));\n  }\n  function closeReject() {\n    setRejectClass('rebus__reject-popup');\n    setTimeout(() => {\n      setRebusBlock('rebus__input-block');\n    }, 150)\n  }\n  function checkHandler(value) {\n    ServerConnect.postQuestion('/answer_question/', `tg_id=${tgID}`, {\n      \"quest_id\": questID,\n      \"answer\": value,\n      })\n      .then((data) => {\n        if (data == 'Неверный ответ') {\n          setRebusBlock('rebus__input-block rebus__input-block_disable');\n          setRejectClass('rebus__reject-popup rebus__reject-popup_active');\n        }\n        else {\n          dispatch(setTasks(data.quests));\n          dispatch(setHeals(data.heals));\n          dispatch(setTickets(data.tickets));\n          setRebusBlock('rebus__input-block rebus__input-block_disable');\n          setSubmitClass(\"rebus__submit-popup rebus__submit-popup_active\");\n        }\n        // console.log(data)\n      })\n      .catch((err) => {});\n  }\n  useEffect(() => {\n    setClassPage('rebus rebus_active');\n    lockScroll();\n  }, []);\n    return (\n        <>\n          <div className={`container ${classPage}`}>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"rebus__submit-popup rebus__submit-popup_active\") {\n                setSubmitClass('rebus__submit-popup');\n              }\n            }} className={submitClass}>\n              <div className='rebus__submit-content'>\n                <img onClick={closeSubmit} className='rebus__submit-close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <p className='rebus__submit-title'>\n                  Слово принято\n                </p>\n                <p className='rebus__submit-subtitle'>\n                  Вы&nbsp;ввели верное кодовое слово, \n                  и&nbsp;за&nbsp;это вы&nbsp;получаете 1&nbsp;Пушинку\n                </p>\n                <button onClick={closeSubmit} className='rebus__submit-btn' type='button'>\n                  К заданиям\n                </button>\n              </div>\n            </div>\n            <div onClick={(evt) => {\n              if (evt.target.className === \"rebus__reject-popup rebus__reject-popup_active\") {\n                setRejectClass('rebus__reject-popup');\n              }\n            }} className={rejectClass}>\n              <div className='rebus__submit-content'>\n                <img onClick={closeReject} className='rebus__submit-close' src=\"assets/images/friend-popup-close.svg\" alt=\"\" />\n                <p className='rebus__submit-title'>\n                  Неверное слово\n                </p>\n                <p className='rebus__submit-subtitle'>\n                  Вы&nbsp;не&nbsp;ввели нужного слова, но&nbsp;всегда можно попытаться снова\n                </p>\n                <button onClick={closeReject} className='rebus__submit-btn' type='button'>\n                  Попробовать еще раз\n                </button>\n              </div>\n            </div>\n            <div className='rebus__bg'></div>\n            <div className='rebus__content'>\n              <img onClick={backHandler} className='rebus__back' src=\"assets/images/rebus-back.png\" alt=\"\" />\n              <p className='rebus__title'>\n                Разгадайте ребус\n              </p>\n              <p className='rebus__subtitle'>\n                {questText}\n              </p>\n              <div className='rebus__link'>\n                <p className='rebus__link-text'>\n                  Перейти к ребусу\n                </p>\n                <a className='rebus__link-href' target='_blank' href={questLink}></a>\n                <img className='rebus__link-arrow' src=\"assets/images/info-faq-arrow.png\" alt=\"\" />\n              </div>\n              <div className={rebusBlock}>\n                <p className='rebus__input-title'>Кодовое слово</p>\n                <input value={inputValue} onChange={(e) => {\n                    setInputValue(e.target.value);\n                    if (e.target.value.trim() != '') {\n                      setRebusBtn('rebus__input-button rebus__input-button_active')\n                    }\n                    else {\n                      setRebusBtn('rebus__input-button')\n                    }\n                  }   \n                } onFocus={(e) => {\n                  if (isIOS) {\n                    e.target.closest('.rebus__input-block').style = 'margin-top: 0;'\n                  }\n                }} onBlur={(e) => {\n                  if (isIOS) {\n                    e.target.closest('.rebus__input-block').style = 'margin-top: auto;';\n                  }\n                }} className='rebus__input' type=\"text\"  placeholder='КОДОВОЕ СЛОВО'/>\n                <button onClick={() => checkHandler(inputValue)} className={rebusBtn} type='button'>Проверить</button>\n              </div>\n            </div>\n          </div>\n        </>\n    );\n}\n\nexport default Rebus;","import Rebus from \"./Rebus\";\r\nexport default Rebus;","import React,{ useEffect, useRef, useState } from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Main from './components/Main';\nimport Loading from './components/Loading';\n\nimport Overlay from './panels/Overlay';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport { setLaunchParams, setPlatform, setAttempts, setIncrement, setActiveModal, setModalName, setConfirmAll, setFirstPage, setGroupLink, setTickets, setHeals, setTasks, setTgID, setPrizes, setGameDays, setReferal, setFriendsCount } from \"./store/mainReducer\"\n\nimport ServerConnect from './service';\n\nimport { Snackbar } from \"@vkontakte/vkui\";\nimport { Icon24DismissSubstract, Icon24CheckCircleOn } from '@vkontakte/icons';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { isIOS } from 'react-device-detect';\nimport OnBoardingFirst from './components/OnBoardingFirst';\nimport OnBoardingSecond from './components/OnBoradingSecond';\nimport Navbar from './components/Navbar';\nimport Info from './components/Info';\nimport Task from './components/Task';\nimport Prize from './components/Prize';\nimport Rebus from './components/Rebus';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const [firstInteraction, setFirstInteraction] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const activePanel = useSelector(state => state.main.activePanel);\n  const isActiveNavbar = useSelector(state => state.main.isActiveNavbar);\n  const platform = useSelector(state => state.main.platform);\n  const [overlayClass, setOverlayClass] = useState('snackbar-faq');\n  const [updatedDays, setUpdatedDays] = useState([]);\n  const [requestPending, setRequestPending] = useState(false);\n  function parseQuery(queryString) {\n    let query = {};\n    let pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n    for (let i = 0; i < pairs.length; i++) {\n        let pair = pairs[i].split('=');\n        query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n    return query;\n  }\n  let userChatId;\n\n  const longAudio = 'assets/images/long.mp3';\n  const longAudioRef = useRef(new Audio(longAudio));\n  function startPlay() {\n    longAudioRef.current.loop = true;\n    longAudioRef.current.play();\n  }\n  const togglePlay = () => {\n    setFirstInteraction(true);\n    if (isPlaying) {\n      longAudioRef.current.pause();\n      setIsPlaying(false);\n    } else {\n      longAudioRef.current.loop = true;\n      longAudioRef.current.play()\n        .then(() => {\n          setIsPlaying(true);\n        })\n        .catch(error => {\n          console.error('Failed to play long audio:', error);\n        });\n    }\n  };\n  function decryptTelegramId(encryptedId) {\n    // Создаем обратный словарь для сопоставления букв и цифр\n    const reverseDictionary = {\n      'x': '0', 'q': '1', 'z': '2', 'p': '3', 'a': '4',\n      'k': '5', 'w': '6', 'r': '7', 'n': '8', 'j': '9'\n    };\n  \n    let decryptedId = '';\n    for (const letter of encryptedId) {\n      decryptedId += reverseDictionary[letter];\n    }\n  \n    return decryptedId;\n  }\n  useEffect(() => {\n    let app = window.Telegram.WebApp;\n    let query = app.initData;\n    let user_data_str = parseQuery(query).user;\n    let user_data = JSON.parse(user_data_str);\n    app.disableVerticalSwipes();\n    app.expand();\n    app.ready();\n    userChatId = user_data[\"id\"];\n    let dataString = `tg_id=${userChatId}`;;\n    // const urlParams = new URLSearchParams(window.location.search);\n\n    // // Извлекаем значение tgWebAppStartParam\n    // const tgWebAppStartParam = urlParams.get('tgWebAppStartParam');\n    // if (tgWebAppStartParam) {\n    //   const decryptedId = decryptTelegramId(tgWebAppStartParam);\n    //   // Выводим значение в консоль\n    //   console.log('decryptedId:', decryptedId);\n    //   dataString = `tg_id=${userChatId}&referal=${decryptedId}`\n    // }\n    // else {\n    //   dataString = `tg_id=${userChatId}`;\n    // }\n    dispatch(setReferal(dataString));\n    dispatch(setTgID(userChatId));\n    ServerConnect.getUser('/users/', dataString)\n      .then((data) => {\n        setRequestPending(true);\n        // console.log(data);\n        dispatch(setTickets(data.tickets));\n        dispatch(setHeals(data.heals));\n        dispatch(setTasks(data.quests));\n        dispatch(setPrizes(data.prizes));\n        dispatch(setGameDays(data.gameDays));\n        dispatch(setFriendsCount(data.invited_friends));\n        const copyOfGameDays = [...data.gameDays];\n        const sortedData = copyOfGameDays.sort((a, b) => new Date(a.date) - new Date(b.date));\n        // Определяем текущую дату по Москве\n        const currentDateObj = new Date();\n        const currentDateOptions = { timeZone: 'Europe/Moscow', year: 'numeric', month: '2-digit', day: '2-digit' };\n        const currentDateStr = currentDateObj.toLocaleString('ru-RU', currentDateOptions).replace(/\\./g, '-');\n        const dateArray = currentDateStr.split('-');\n        const formattedCurrentDateStr = `${dateArray[2]}-${dateArray[1]}-${dateArray[0]}`;\n\n        // console.log(formattedCurrentDateStr);\n\n        // Находим индекс объекта, подходящего под текущую дату по Москве\n        const currentIndex = sortedData.findIndex(obj => obj.date === formattedCurrentDateStr);\n\n        // Создаем новый массив, состоящий из элементов, начиная с начала и заканчивая текущим днем\n        const updatedDaysArr = sortedData.slice(0, currentIndex + 1);\n        \n        setUpdatedDays(updatedDaysArr);\n      })\n      .catch((err) => {\n        \n      });\n  }, []);\n\n  let content = []\n  if (activePanel === 'loading') {\n    content.push(<Loading requestPending={requestPending} key='loading'/>)\n  }\n  else if (activePanel === 'onboarding-first') {\n    content.push(<OnBoardingFirst key='onboarding-first'/>)\n  }\n  else if (activePanel === 'onboarding-second') {\n    content.push(<OnBoardingSecond key='onboarding-second'/>)\n  }\n  else if (activePanel === 'main') {\n    content.push(<Main updatedDays={updatedDays} firstInteraction={firstInteraction} setFirstInteraction={setFirstInteraction} setIsPlaying={setIsPlaying} startPlay={startPlay} key='main'/>)\n  }\n  else if (activePanel === 'info') {\n    content.push(<Info key='info'/>)\n  }\n  else if (activePanel === 'task') {\n    content.push(<Task key='task'/>)\n  }\n  else if (activePanel === 'prize') {\n    content.push(<Prize key='prize'/>)\n  }\n  else if (activePanel === 'rebus') {\n    content.push(<Rebus key='rebus'/>)\n  }\n  return (\n    <div className={`app ${platform}`}>\n      <>\n        <img className='music-icon' onClick={togglePlay} style={{display: isActiveNavbar ? 'block' : 'none', position: 'absolute',zIndex: '11',top: activePanel == 'prize' ? '17px' : activePanel == 'rebus' ? '30px' : '68px', right: '10px'}} src={isPlaying ? 'assets/images/music.svg' : 'assets/images/no-music.svg'} alt=\"\" />\n        {/* <div className={isIOS ? 'ios-help-bg' : 'not-ios-help'}></div> */}\n        {content}\n        <Navbar isActive={isActiveNavbar}/>\n        <Overlay>\n        </Overlay>\n      </>\n    </div>\n  );\n}\nexport default App;\n","import {combineReducers, configureStore} from \"@reduxjs/toolkit\"\nimport mainSlice from './mainReducer';\n\nconst rootReducer = combineReducers({\n    main:mainSlice\n})\n\nexport const store = configureStore({\n    reducer:rootReducer\n})\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport {Provider, useDispatch} from 'react-redux';\nimport bridge from '@vkontakte/vk-bridge';\nimport {store} from './store';\nimport '../public/assets/css/normalize.css'\nimport '../public/assets/css/main.css'\nimport '../public/assets/css/media.css'\n\nbridge.send(\"VKWebAppInit\");\nbridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#fff\"});\n\nconst container = document.getElementById('root')\nconst root = createRoot(container)\nroot.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkSportApp\"] = self[\"webpackChunkSportApp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [840], () => (__webpack_require__(26981)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [840], () => (__webpack_require__(24687)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","mainSlice","createSlice","name","initialState","platform","activePanel","cardInfo","launch_params","isLoading","activeModal","modalName","boxes","currentBox","attempts","increment","user","number","avatar","cheques","prizes","winners","confirmAll","firstPage","groupLink","isActiveNavbar","tickets","heals","tasks","tgID","gameDays","referal","questID","questLink","questText","friendsCount","reducers","setLaunchParams","state","action","payload","setActivePanel","setActiveModal","setIsLoading","setPlatform","setBoxes","setCurrentBox","setAttempts","setIncrement","setModalName","setCardInfo","setUserNumber","setUserName","setUserAvatar","setCheques","setWinners","setConfirmAll","setFirstPage","setGroupLink","setActiveNavbar","setTickets","setHeals","setTasks","setTgID","setPrizes","setGameDays","setReferal","setQuestID","setFriendsCount","setQuestLink","setQuestText","_mainSlice$actions","actions","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","api_url","params","window","location","search","_getUserInfo","_callee","url","data","request","response","_args","_context","URLSearchParams","toString","fetch","ok","concat","status","json","_postQuestion","_callee2","id","_args2","_context2","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","_postHeal","_callee3","_args3","_context3","_postFinish","_callee4","_args4","_context4","_postClick","_callee5","_args5","_context5","postQuestion","getUser","postClick","postHeal","postFinish","front_url","_ref","x","_useState2","children","_slicedToArray","useState","opacity","setOpacity","_useState4","coin1","src","setSrc","coinImages","coin2","coin3","coin4","useEffect","images","Array","isArray","Math","floor","random","intervalId","setInterval","max","clearInterval","React","className","style","left","top","alt","overlayClass","setOverlayClass","firstInteraction","currentSwiperIndex","setFirstInteraction","updatedDays","setIsPlaying","startPlay","dispatch","useDispatch","useSelector","main","healsCount","ticketsCount","progressWidth","setProgressWidth","endPage","setEndPage","_useState6","catHeadClass","setCatHeadClass","_useState8","catBodyClass","setCatBodyClass","_useState10","classPage","setClassPage","_useState12","penPopup","setPenPopup","_useState14","penRejectPopup","setPenRejectPopup","_useState16","penSuccessPopup","setPenSuccessPopup","_useState18","penWaitPopup","setPenWaitPopup","_useState20","ticketPopup","setTicketPopup","_useState22","pawPopup","setPawPopup","_useState24","setCoinClass","_useState26","pawPage","setPawPage","_useState28","coins","setCoins","_useState30","count","setCount","_useState32","pawsDecrease","setPawsDecrease","_useState34","pawsButton","setPawsButton","_useState36","pawPageSecondTicket","setPawPageSecondTicket","_useState38","pawPageSecondPromo","setPawPageSecondPromo","_useState40","topPopup","setTopPopup","_useState42","endClicking","setEndClicking","_useState44","setLastClickTime","_useState46","days","setDays","_useState48","gameDayID","setGameDayID","_useState50","pawsInfo","setPawsInfo","_useState52","pawsPromo","setPawsPromo","_useState54","ticketText","setTicketText","swiperRef","useRef","vibro","isIOS","Telegram","WebApp","HapticFeedback","impactOccurred","navigator","vibrate","closeTicketPopup","closePenSuccessPopup","ServerConnect","endClick","sortedData","_toConsumableArray","sort","b","Date","date","dateArray","toLocaleString","timeZone","year","month","day","replace","split","formattedCurrentDateStr","currentIndex","findIndex","obj","clicks","setTimeout","current","swiper","slideTo","lastExecutionTimeRef","requestIdRef","didMountRef","executeCallback","performance","now","requestAnimationFrame","checkAndExecute","cancelAnimationFrame","onClick","description","quests","code","clipboard","writeText","evt","target","display","alignItems","justifyContent","width","textAlign","paddingTop","marginBottom","map","coin","index","Coin","pointerEvents","onMouseDown","event","isDesktop","currentTime","prevState","clientX","clientY","newCoins","startPCClick","onMouseUp","onTouchStart","prevCount","touches","startClick","onTouchEnd","Swiper","ref","spaceBetween","slidesPerView","reward_obtained","SwiperSlide","requestPending","localStorage","getItem","props","_objectDestructuringEmpty","setItem","isActive","currentScreen","setClassMain","class","homeWhite","setClassInfo","infoGreen","setClassTask","taskGreen","setClassPrize","prizeGreen","homeGreen","taskWhite","infoWhite","prizeWhite","classMain","classInfo","classTask","classPrize","buttonHandler","activeElements","setActiveElements","question","answer","faq","_objectSpread","_defineProperty","handleClick","href","tasksArray","friendPopup","setFriendPopup","encryptTelegramId","telegramId","_step","dictionary","encryptedId","_iterator","_createForOfIteratorHelper","sortedArray","invited_friends","task","text","taskCompleted","taskNotCompleted","infoPopup","setInfoPopup","promoClass","setPromoClass","ticketClass","setTicketClass","promosClass","setPromosClass","ticketsClass","setTicketsClass","promo","ticket","rebusBtn","setRebusBtn","rebusBlock","setRebusBlock","submitClass","setSubmitClass","rejectClass","setRejectClass","inputValue","setInputValue","closeSubmit","closeReject","scrollTop","scrollLeft","pageYOffset","document","documentElement","pageXOffset","onscroll","scrollTo","onChange","trim","onFocus","closest","onBlur","placeholder","userChatId","isPlaying","setUpdatedDays","setRequestPending","longAudioRef","Audio","app","user_data_str","queryString","query","pairs","substr","pair","decodeURIComponent","parseQuery","initData","user_data","parse","disableVerticalSwipes","expand","ready","dataString","updatedDaysArr","content","Loading","OnBoardingFirst","OnBoardingSecond","Main","loop","play","Info","Task","Prize","Rebus","pause","console","position","zIndex","right","Navbar","Overlay","rootReducer","combineReducers","store","configureStore","reducer","bridge","container","getElementById","createRoot","render","Provider","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","amdO","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","definition","get","globalThis","this","Function","prop","scriptUrl","importScripts","currentScript","scripts","getElementsByTagName","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}